{"version":3,"sources":["logo.svg","Firebase/firebase.js","SignIn.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","SignIn","onClick","google_provider","auth","GoogleAuthProvider","signInWithPopup","then","re","console","log","catch","err","App","useState","isSignedIn","setIsSignedIn","onAuthStateChanged","user","className","src","logo","alt","signOut","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAe,MAA0B,iC,sCCkBzCA,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,gBACnBC,MAAO,+C,YCEMC,EAdA,WAWX,OAAQ,wBAAQC,QAVW,WACvB,IAAIC,EAAkB,IAAIV,IAASW,KAAKC,mBACxCZ,IAASW,OAAOE,gBAAgBH,GAC/BI,MAAM,SAAAC,GACHC,QAAQC,IAAIF,MAEfG,OAAO,SAAAC,GACJH,QAAQC,IAAIE,OAGZ,kCCoCGC,MAtCf,WACE,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAOA,GANAvB,IAASW,OAAOa,oBAAoB,SAAAC,GAClC,GAAIA,EACF,OAAOF,GAAc,GAEvBA,GAAc,OAEG,IAAfD,EAAqB,CAIvB,OACE,qBAAKI,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,wBACEH,UAAU,WACVjB,QAZQ,WACdT,IAASW,OAAOmB,WASZ,2BASN,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWxB,SC9BtByB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dbb277c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Import the functions you need from the SDKs you need\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\"\r\nimport \"firebase/compat/auth\"\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA15hYftFwZeftincU2YIeoed1XyTSdnRI\",\r\n  authDomain: \"sign-in-66439.firebaseapp.com\",\r\n  projectId: \"sign-in-66439\",\r\n  storageBucket: \"sign-in-66439.appspot.com\",\r\n  messagingSenderId: \"1073201458043\",\r\n  appId: \"1:1073201458043:web:6e92edcb84c35a9794abde\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport {firebase}","import React from \"react\";\r\nimport {firebase} from './Firebase/firebase';\r\nconst SignIn = () => {\r\n    const SignInWithFirebase = () => {\r\n        let google_provider = new firebase.auth.GoogleAuthProvider();\r\n        firebase.auth().signInWithPopup(google_provider)\r\n        .then( re => {\r\n            console.log(re);\r\n        })\r\n        .catch( err => {\r\n            console.log(err);\r\n        })\r\n    };\r\n    return (<button onClick={SignInWithFirebase}>Sign In with Google</button>)\r\n};\r\n\r\nexport default SignIn;","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport SignIn from \"./SignIn\"\nimport {firebase} from \"./Firebase/firebase\"\n\nfunction App() {\n  const [isSignedIn, setIsSignedIn] = useState(true);\n  firebase.auth().onAuthStateChanged( user => {\n    if (user) {\n      return setIsSignedIn(true);\n    }\n    setIsSignedIn(false);\n  })\n  if (isSignedIn === true) {\n    const signOut = () => {\n      firebase.auth().signOut();\n    };\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <button\n            className=\"App-link\"\n            onClick={signOut}>\n              Sign Out\n          </button>\n        </header>\n      </div>\n    );\n  } else {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" component={SignIn} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n\n/**\n * return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n */","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}